<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

    <bean id="dataSource" parent="dataSourceParent" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl">
            <value>${datasource.url}</value>
        </property>
        <property name="user">
            <value>${datasource.username}</value>
        </property>
        <property name="password">
            <value>${datasource.password}</value>
        </property>
    </bean>

    <bean id="sessionFactory" parent="sessionFactoryParent" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref local="dataSource" />
        </property>
        <property name="packagesToScan" value="ph.sinonet.vg.live.model.sms" />
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
        <property name="defaultTimeout" value="30000" />
    </bean>

    <bean id="smsBaseDao" class="ph.sinonet.vg.live.dao.UniversalDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
	<bean id="smsConfigLogger" class="ph.sinonet.vg.live.aspect.SmsConfigLogger"></bean>
    <!-- the transactional advice -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- all methods starting with get are read-only -->
            <tx:method name="get*" read-only="true" propagation="REQUIRED"/>
            <tx:method name="find*" read-only="true" propagation="REQUIRED"/>
            <tx:method name="query*" read-only="true" propagation="REQUIRED"/>
            <!-- other methods will get the default transaction settings -->
            <tx:method name="modify*" propagation="REQUIRED" rollback-for="java.lang.Exception" />    
           <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception" />    
           <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception" />    
           <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception" />    
           <tx:method name="enable*" propagation="REQUIRED"  rollback-for="java.lang.Exception" />    
           <tx:method name="disable*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
            <tx:method name="cancel*" propagation="REQUIRED"  rollback-for="java.lang.Exception" />    
            <tx:method name="*" rollback-for="*" timeout="180"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="allservices" expression="execution(* ph.sinonet.vg.live.service.impl.*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="allservices" />
        <aop:aspect id="smsConfigLoggerAspect" ref="smsConfigLogger">
        	<aop:around method="record" pointcut="execution(* ph.sinonet.vg.live.service.interfaces.*.modify*(..)) or execution(* ph.sinonet.vg.live.service.interfaces.*.add*(..)) or execution(* ph.sinonet.vg.live.service.interfaces.*.delete*(..)) or execution(* ph.sinonet.vg.live.service.interfaces.*.update*(..)) or execution(* ph.sinonet.vg.live.service.interfaces.*.enable*(..)) or execution(* ph.sinonet.vg.live.service.interfaces.*.disable*(..)) or execution(* ph.sinonet.vg.live.service.interfaces.*.cancel*(..)) or execution(* ph.sinonet.vg.live.service.interfaces.*.log*(..)) or execution(* ph.sinonet.vg.live.service.interfaces.*.not*(..)) and !bean(smsConfigLogService)"/>
    	</aop:aspect>
    </aop:config> 
</beans>